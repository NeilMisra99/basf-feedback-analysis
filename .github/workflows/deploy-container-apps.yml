name: Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
    paths: 
      - 'backend/**'
      - '.github/workflows/deploy-container-apps.yml'
  workflow_dispatch:

env:
  REGISTRY_NAME: basffeedbackregistry
  IMAGE_NAME: basf-feedback-api
  CONTAINER_APP_NAME: basf-feedback-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and push Docker image
      run: |
        # Build Docker image from backend directory
        docker build -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} backend/
        docker build -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest backend/
        
        # Push Docker image
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        containerAppName: ${{ env.CONTAINER_APP_NAME }}
        resourceGroup: feedback-analysis-rg
        imageToDeploy: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        targetPort: 5001
        environmentVariables: |
          FLASK_ENV=production
          AZURE_TEXT_ANALYTICS_KEY=${{ secrets.AZURE_TEXT_ANALYTICS_KEY }}
          AZURE_TEXT_ANALYTICS_ENDPOINT=${{ secrets.AZURE_TEXT_ANALYTICS_ENDPOINT }}
          AZURE_SPEECH_KEY=${{ secrets.AZURE_SPEECH_KEY }}
          AZURE_SPEECH_REGION=${{ secrets.AZURE_SPEECH_REGION }}
          AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL=${{ secrets.OPENAI_MODEL }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}